name: publish

on:
  push:
    tags:
      - "*"
env:
  PROJECT_NAME: "ASFProfileConverter"
  CONFIGURATION: Release
  DOTNET_SDK_VERSION: 8.0.x

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        arch: [win-x64, win-arm64]

    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7
        with:
          submodules: recursive

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4.0.1
        with:
          dotnet-version: ${{ env.DOTNET_SDK_VERSION }}

      - name: Verify .NET Core
        run: dotnet --info
      
      - name: Restore packages in preparation for ${{ env.PROJECT_NAME }} publishing
        run: dotnet restore ${{ env.PROJECT_NAME }} -p:ContinuousIntegrationBuild=true --nologo

      - name: Publish ${{ env.PROJECT_NAME }}
        run: dotnet publish ${{ env.PROJECT_NAME }} -o:"./publish/" -c:Release

      - name: Publish ${{ env.PROJECT_NAME }} ${{ matrix.arch }}
        shell: pwsh
        run: |
          $commonArgs = @(
            "-r:${{ matrix.arch }}",
            "-c:${{ env.CONFIGURATION }}",
            "-p:PublishTrimmed=false",
            "-p:PublishSingleFile=true",
            "-p:IncludeNativeLibrariesForSelfExtract=true",
            "-p:ContinuousIntegrationBuild=true",
            "--no-restore",
            "--nologo",
          )

          $commonArgStr = $commonArgs -join " "

          dotnet publish ${{ env.PROJECT_NAME }} -o:"./tmp/${{ env.PROJECT_NAME }}-fde" $commonArgStr --self-contained=true 
          dotnet publish ${{ env.PROJECT_NAME }} -o "./tmp/${{ env.PROJECT_NAME }}" $commonArgStr --self-contained=false
      
      - name: Clean Xmls
        shell: pwsh
        run: |
          Remove-Item "./tmp/${{ env.PROJECT_NAME }}-fde/*.xml" 
          Remove-Item "./tmp/${{ env.PROJECT_NAME }}/*.xml"

      - name: Zip files
        run: |
          7z a -bd -slp -tzip -mm=Deflate -mx=5 -mfb=150 -mpass=10 "./dist/${{ matrix.arch }}-fde.zip" "./tmp/${{ env.PROJECT_NAME }}-fde/*"
          7z a -bd -slp -tzip -mm=Deflate -mx=5 -mfb=150 -mpass=10 "./dist/${{ matrix.arch }}.zip" "./tmp/${{ env.PROJECT_NAME }}/*"

      - name: Upload ${{ env.PROJECT_NAME }}-fde ${{ matrix.arch }}
        continue-on-error: true
        uses: actions/upload-artifact@v4.3.6
        with:
          name: ${{ matrix.arch }}-fde
          path: ./dist/${{ matrix.arch }}-fde.zip

      - name: Upload ${{ env.PROJECT_NAME }} ${{ matrix.arch }}
        continue-on-error: true
        uses: actions/upload-artifact@v4.3.6
        with:
          name: ${{ matrix.arch }}
          path: ./dist/${{ matrix.arch }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      - name: Download win-x64-fde artifact
        continue-on-error: true
        uses: actions/download-artifact@v4.1.8
        with:
          name: win-x64-fde
          path: out

      - name: Download win-x64 artifact
        continue-on-error: true
        uses: actions/download-artifact@v4.1.8
        with:
          name: win-x64
          path: out

      - name: Download win-arm64-fde artifact
        continue-on-error: true
        uses: actions/download-artifact@v4.1.8
        with:
          name: win-arm64-fde
          path: out

      - name: Download win-arm64 artifact
        continue-on-error: true
        uses: actions/download-artifact@v4.1.8
        with:
          name: win-arm64
          path: out

      - name: Create ${{ env.PROJECT_NAME }} GitHub release
        uses: ncipollo/release-action@v1.14.0
        with:
          artifacts: "out/*"
          makeLatest: false
          prerelease: true
          tag: ${{ github.ref_name }}
          name: ${{ env.PROJECT_NAME }} ${{ github.ref_name }}
          body: |
            # 更新说明

            release created bt github actions

            ---

            > 带 `fde` 表示可执行文件内置 .net 框架, 可以脱离框架运行, 但是体积比较大
            > 如果电脑上已经安装过 .net 框架, 可以下载不带 `fde` 的版本, 节约硬盘空间


